(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{127:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return o}));var a=n(2),b=n(6),r=(n(0),n(133)),l={id:"problem",title:"10 Days Of Code",sidebar_label:"10 Days Of Code"},c={id:"problem",title:"10 Days Of Code",description:"Content extracted from HackerRank for translation.",source:"@site/docs/problem.md",permalink:"/docs/problem",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/problem.md",sidebar_label:"10 Days Of Code",sidebar:"docs",previous:{title:"O b\xe1sico",permalink:"/docs/tutorial"}},i=[],p={rightToc:i};function o(e){var t=e.components,n=Object(b.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Content extracted from ",Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"https://www.hackerrank.com/"}),"HackerRank")," for translation.")),Object(r.b)("h1",{id:"day-0-hello-world"},"Day 0: Hello, World!"),Object(r.b)("p",null,"This series focuses on learning and practicing JavaScript. Each challenge comes with a tutorial article, and you can view these articles by clicking either the ",Object(r.b)("em",{parentName:"p"},"Topics")," tab along the top or the ",Object(r.b)("em",{parentName:"p"},"article")," icon in the right-hand menu."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we review some basic concepts that will get you started with this series. Check out the tutorial to learn more about JavaScript's lexical structure."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"A ",Object(r.b)("em",{parentName:"p"},"greeting")," function is provided for you in the editor below. It has one parameter,  $parameterVariable$.Perform the following tasks to complete this challenge:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Use ",Object(r.b)("inlineCode",{parentName:"li"},"console.log()")," to print ",Object(r.b)("inlineCode",{parentName:"li"},"Hello, World!")," on a new line in the console, which is also known as ",Object(r.b)("em",{parentName:"li"},"stdout")," or ",Object(r.b)("em",{parentName:"li"},"standard output"),". The code for this portion of the task is already provided in the editor."),Object(r.b)("li",{parentName:"ol"},"Use ",Object(r.b)("inlineCode",{parentName:"li"},"console.log()")," to print the contents of  $parameterVariable$ (i.e., the argument passed to ",Object(r.b)("em",{parentName:"li"},"main"),").")),Object(r.b)("p",null,"You've got this!"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Data Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$parameterVariable$"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A single line of text containing one or more space-separated words.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"Print the following two lines of output:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"On the first line, print ",Object(r.b)("inlineCode",{parentName:"li"},"Hello, World!")," (this is provided for you in the editor)."),Object(r.b)("li",{parentName:"ol"},"On the second line, print the contents of $ parameterVariable$.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Welcome to 10 Days of JavaScript!\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Hello, World!\nWelcome to 10 Days of JavaScript!\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"We printed two lines of output:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"We printed the literal string ",Object(r.b)("inlineCode",{parentName:"li"},"Hello, World!")," using the code provided in the editor."),Object(r.b)("li",{parentName:"ol"},"The value of $ parameterVariable $ passed to our ",Object(r.b)("em",{parentName:"li"},"main")," function in this ",Object(r.b)("em",{parentName:"li"},"Sample Case")," was ",Object(r.b)("inlineCode",{parentName:"li"},"Welcome to 10 Days of JavaScript!"),". We then passed our variable to ",Object(r.b)("em",{parentName:"li"},"console.log"),", which printed the contents of $ parameterVariable$.")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/**\n*   A line of code that prints \"Hello, World!\" on a new line is provided in the editor. \n*   Write a second line of code that prints the contents of 'parameterVariable' on a new line.\n*\n*   Parameter:\n*   parameterVariable - A string of text.\n**/\nfunction greeting(parameterVariable) {\n    // This line prints 'Hello, World!' to the console:\n    console.log('Hello, World!');\n\n    // Write a line of code that prints parameterVariable to stdout using console.log:\n    \n}\n")),Object(r.b)("h1",{id:"day-0-data-types"},"Day 0: Data Types"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"Today, we're discussing data types. Check out the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Variables named $firstInteger $ , $firstDecimal $ and $firstString $ are declared for you in the editor below. You must use the operator to perform the following sequence of operations:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Convert $secondInteger $ to an integer (Number type), then sum it with $ firstInteger $ and print the result on a new line using ",Object(r.b)("inlineCode",{parentName:"li"},"console.log"),"."),Object(r.b)("li",{parentName:"ol"},"Convert $secondDecimal $ to a floating-point number (Number type), then sum it with $  firstDecimal$ and print the result on a new line using ",Object(r.b)("inlineCode",{parentName:"li"},"console.log"),"."),Object(r.b)("li",{parentName:"ol"},"Print the concatenation of  $firstString$ and $secondString $ on a new line using ",Object(r.b)("inlineCode",{parentName:"li"},"console.log"),". Note that $  firstString $ ",Object(r.b)("em",{parentName:"li"},"must")," be printed first.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Data Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$   secondInteger$"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The string representation of an integer you must sum with $firstInteger  $ .")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$secondDecimal  $"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The string representation of a floating-point number you must sum with $firstDecimal  $.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$secondString  $"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A string of one or more space-separated words you must append to $ secondString  $.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"Print the following three lines of output:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"On the first line, print the sum of $  firstInteger$ and the integer representation of $  secondInteger $."),Object(r.b)("li",{parentName:"ol"},"On the second line, print the sum of $  firstDecimal  $ and the floating-point representation of $secondDecimal  $."),Object(r.b)("li",{parentName:"ol"},"On the third line, print $firstString  $ concatenated with $secondString  $. You must print $firstString   $ before $ secondString  $.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"12\n4.32\nis the best place to learn and practice coding!\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"16\n8.32\nHackerRank is the best place to learn and practice coding!\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"When we sum the integers $4$ and $12$, we get the integer $16$.\nWhen we sum the floating-point numbers $4.0$ and $4.32$, we get $8.32$ . When we concatenate ",Object(r.b)("inlineCode",{parentName:"p"},"HackerRank")," with ",Object(r.b)("inlineCode",{parentName:"p"},"is the best place to learn and practice coding!"),", we get ",Object(r.b)("inlineCode",{parentName:"p"},"HackerRank is the best place to learn and practice coding!"),"."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"You will not pass this challenge if you attempt to assign the ","*","Sample Case","*"," values to your variables instead of following the instructions above.")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/**\n*   The variables 'firstInteger', 'firstDecimal', and 'firstString' are declared for you -- do not modify them.\n*   Print three lines:\n*   1. The sum of 'firstInteger' and the Number representation of 'secondInteger'.\n*   2. The sum of 'firstDecimal' and the Number representation of 'secondDecimal'.\n*   3. The concatenation of 'firstString' and 'secondString' ('firstString' must be first).\n*\n*   Parameter(s):\n*   secondInteger - The string representation of an integer.\n*   secondDecimal - The string representation of a floating-point number.\n*   secondString - A string consisting of one or more space-separated words.\n**/\nfunction performOperation(secondInteger, secondDecimal, secondString) {\n    // Declare a variable named 'firstInteger' and initialize with integer value 4.\n    const firstInteger = 4;\n    \n    // Declare a variable named 'firstDecimal' and initialize with floating-point value 4.0.\n    const firstDecimal = 4.0;\n    \n    // Declare a variable named 'firstString' and initialize with the string \"HackerRank\".\n    const firstString = 'HackerRank ';\n    \n    // Write code that uses console.log to print the sum of the 'firstInteger' and 'secondInteger' (converted to a Number        type) on a new line.\n    \n    \n    // Write code that uses console.log to print the sum of 'firstDecimal' and 'secondDecimal' (converted to a Number            type) on a new line.\n    \n    \n    // Write code that uses console.log to print the concatenation of 'firstString' and 'secondString' on a new line. The        variable 'firstString' must be printed first.\n    \n}\n")),Object(r.b)("h1",{id:"day-1-arithmetic-operators"},"Day 1: Arithmetic Operators"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we practice using arithmetic operators. Check out the attached tutorial for resources."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the following functions in the editor below:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"getArea(length, width)"),": Calculate and return the ",Object(r.b)("em",{parentName:"li"},"area")," of a rectangle having sides $lenght$ and $width$ ."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"getPerimeter(length, width)"),": Calculate and return the ",Object(r.b)("em",{parentName:"li"},"perimeter")," of a rectangle having sides $length$ and $width$ .")),Object(r.b)("p",null,"The values returned by these functions are printed to stdout by locked stub code in the editor."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/0/1483593098-d7eec46104-JS-input-function-name.png",alt:"image"}))),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/0/1483593124-050e72f8c3-JS-input-function-name-params.png",alt:"image"}))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"1 $\\leq length, width \\leq 1000$ "),Object(r.b)("li",{parentName:"ul"},"$length$ $width $ and are scaled to ",Object(r.b)("em",{parentName:"li"},"at most")," three decimal places.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/0/1483593468-09d3f126ba-JS-output.png",alt:"image"}))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"3\n4.5\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"13.5\n15\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"The area of the rectangle is $length$  $x$  $width$  $=$ $3$ $x$ $4.5$ $=$ $13.5$.\nThe perimeter of the rectangle is $2 \\cdot (length + width)=2 \\cdot (3 + 4.5) = 15$ ."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/**\n*   Calculate the area of a rectangle.\n*\n*   length: The length of the rectangle.\n*   width: The width of the rectangle.\n*   \n*   Return a number denoting the rectangle's area.\n**/\nfunction getArea(length, width) {\n    let area;\n    // Write your code here\n    \n    return area;\n}\n\n/**\n*   Calculate the perimeter of a rectangle.\n*   \n*   length: The length of the rectangle.\n*   width: The width of the rectangle.\n*   \n*   Return a number denoting the perimeter of a rectangle.\n**/\nfunction getPerimeter(length, width) {\n    let perimeter;\n    // Write your code here\n    \n    return perimeter;\n}\n")),Object(r.b)("h1",{id:"day-1-functions"},"Day 1: Functions"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"Today, we're discussing JavaScript ",Object(r.b)("em",{parentName:"p"},"functions"),". Check out the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Implement a function named ",Object(r.b)("em",{parentName:"p"},"factorial")," that has one parameter: an integer, $n$. It must return the value of $n!$ (i.e. $n$, factorial)."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"Locked stub code in the editor reads a single integer, $n$, from stdin and passes it to a function named ",Object(r.b)("em",{parentName:"p"},"factorial"),"."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"$1 \\leq n \\leq 10 $")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"The function must return the value of $n! $ ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"4\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"24\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"We return the value of $4! = 4\\ x\\ 3\\ x\\ 2\\ x\\ 1 = 24$."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/*\n * Create the function factorial here\n */\n\n")),Object(r.b)("h1",{id:"day-1-let-and-const"},"Day 1: Let and Const"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we practice declaring variables using the ",Object(r.b)("em",{parentName:"p"},"let")," and ",Object(r.b)("em",{parentName:"p"},"const")," keywords. Check out the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Declare a ",Object(r.b)("em",{parentName:"li"},"constant variable"),", $PI$, and assign it the value ",Object(r.b)("em",{parentName:"li"},"Math.PI"),". You will not pass this challenge unless the variable is declared as a constant and named ",Object(r.b)("inlineCode",{parentName:"li"},"PI")," (uppercase)."),Object(r.b)("li",{parentName:"ol"},"Read a number, , denoting the radius of a circle from stdin."),Object(r.b)("li",{parentName:"ol"},"Use $PI$ and $r$ to calculate the $area$ and $perimeter$ of a circle having radius $r$ ."),Object(r.b)("li",{parentName:"ol"},"Print $area $ as the first line of output and print $perimeter $ as the second line of output.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"A single integer, $r$, denoting the radius of a circle."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"$0 < r \\leq 100$"),Object(r.b)("li",{parentName:"ul"},"$r$ is a floating-point number scaled to ",Object(r.b)("em",{parentName:"li"},"at most"),"  $3$ decimal places.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"Print the following two lines:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"On the first line, print the $area $ of the circle having radius $r$."),Object(r.b)("li",{parentName:"ol"},"On the second line, print the $ perimeter $ of the circle having radius $r$ .")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"2.6\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"21.237166338267002\n16.336281798666924\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"Given the radius $r = 2.6$, we calculate the following:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"$area =\\pi \\cdot r ^ {2} = 21.237166338267002$"),Object(r.b)("li",{parentName:"ul"},"$perimeter = 2 \\cdot \\pi \\cdot r = 16.336281798666924$")),Object(r.b)("p",null,"We then print $ area $ as our first line of output and $ perimeter$ as our second line of output."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"function main() {\n    // Write your code here. Read input using 'readLine()' and print output using 'console.log()'.\n    \n    // Print the area of the circle:\n    \n    // Print the perimeter of the circle:\n\n")),Object(r.b)("h1",{id:"day-2-conditional-statements-if-else"},"Day 2: Conditional Statements: If-Else"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we learn about ",Object(r.b)("em",{parentName:"p"},"if-else")," statements. Check out the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the ",Object(r.b)("inlineCode",{parentName:"p"},"getGrade(score)")," function in the editor. It has one parameter: an integer, $score$, denoting the number of points Julia earned on an exam. It must return the letter corresponding to her $grade$ according to the following rules:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"If $25 < score \\leq 30$, then $grade = A$."),Object(r.b)("li",{parentName:"ul"},"If $20 < score \\leq 25$ , then $grade = B$."),Object(r.b)("li",{parentName:"ul"},"If $15 < score \\leq 20$, then $grade = C$."),Object(r.b)("li",{parentName:"ul"},"If $10 < score \\leq 15$, then $grade = D$."),Object(r.b)("li",{parentName:"ul"},"If $5 < score \\leq 10$, then $grade = E$."),Object(r.b)("li",{parentName:"ul"},"If $0 < score \\leq 5$, then $grade = F$.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"Stub code in the editor reads a single integer denoting $score $ from stdin and passes it to the function."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"$0 \\leq score \\leq 30$")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"The function must return the value of $grade $ (i.e., the letter grade) that Julia earned on the exam."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"11\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"D\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"Because $score=11$, it satisfies the condition $10 < score \\leq 15 $ (which corresponds to ",Object(r.b)("inlineCode",{parentName:"p"},"D"),"). Thus, we return ",Object(r.b)("inlineCode",{parentName:"p"},"D")," as our answer."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"function getGrade(score) {\n    let grade;\n    // Write your code here\n    \n    return grade;\n}\n")),Object(r.b)("h1",{id:"day-2-conditional-statements-switch"},"Day 2: Conditional Statements: Switch"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we learn about ",Object(r.b)("em",{parentName:"p"},"switch statements"),". Check out the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the ",Object(r.b)("inlineCode",{parentName:"p"},"getLetter(s)")," function in the editor. It has one parameter: a string, , consisting of lowercase English alphabetic letters (i.e., ",Object(r.b)("inlineCode",{parentName:"p"},"a")," through ",Object(r.b)("inlineCode",{parentName:"p"},"z"),"). It must return ",Object(r.b)("inlineCode",{parentName:"p"},"A"),", ",Object(r.b)("inlineCode",{parentName:"p"},"B"),", ",Object(r.b)("inlineCode",{parentName:"p"},"C"),", or ",Object(r.b)("inlineCode",{parentName:"p"},"D")," depending on the following criteria:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"If the first character in string is in the set $","{","a,e,i,o,u","}","$, then return ",Object(r.b)("inlineCode",{parentName:"li"},"A"),"."),Object(r.b)("li",{parentName:"ul"},"If the first character in string is in the set $","{","b,c,d,f,g","}","$ , then return ",Object(r.b)("inlineCode",{parentName:"li"},"B"),"."),Object(r.b)("li",{parentName:"ul"},"If the first character in string is in the set $","{","h,j,k,l,m","}","$, then return ",Object(r.b)("inlineCode",{parentName:"li"},"C"),"."),Object(r.b)("li",{parentName:"ul"},"If the first character in string is in the set $","{","n,p,q,r,s,t,v,w,x,y,z","}","$, then return ",Object(r.b)("inlineCode",{parentName:"li"},"D"),".")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Hint:")," You can get the letter at some index $i$ in $s$ using the syntax ",Object(r.b)("inlineCode",{parentName:"p"},"s[i]")," or ",Object(r.b)("inlineCode",{parentName:"p"},"s.charAt(i)"),"."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"Stub code in the editor reads a single string denoting $s$ from stdin."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"$1 \\leq |s| \\leq 100 $, where $|s|$ is the length of $s$."),Object(r.b)("li",{parentName:"ul"},"String contains lowercase English alphabetic letters (i.e., ",Object(r.b)("inlineCode",{parentName:"li"},"a")," through ",Object(r.b)("inlineCode",{parentName:"li"},"z"),") only.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"Return either ",Object(r.b)("inlineCode",{parentName:"p"},"A"),", ",Object(r.b)("inlineCode",{parentName:"p"},"B"),", ",Object(r.b)("inlineCode",{parentName:"p"},"C"),", or ",Object(r.b)("inlineCode",{parentName:"p"},"D")," according to the criteria given above."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"adfgt\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"A\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"The first character of string $s=adfgt$ is ",Object(r.b)("inlineCode",{parentName:"p"},"a"),". Because the given criteria stipulate that we print ",Object(r.b)("inlineCode",{parentName:"p"},"A")," any time the first character is in $","{","a,e,i,o,u","}"," $ , we return ",Object(r.b)("inlineCode",{parentName:"p"},"A")," as our answer."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"function getLetter(s) {\n    let letter;\n    // Write your code here\n    \n    return letter;\n}\n")),Object(r.b)("h1",{id:"day-2-loops"},"Day 2: Loops"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we practice looping over the characters of string. Check out the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the ",Object(r.b)("em",{parentName:"p"},"vowelsAndConsonants")," function in the editor below. It has one parameter, a string, $s$, consisting of lowercase English alphabetic letters (i.e., ",Object(r.b)("inlineCode",{parentName:"p"},"a")," through ",Object(r.b)("inlineCode",{parentName:"p"},"z"),"). The function must do the following:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"First, print each ",Object(r.b)("em",{parentName:"li"},"vowel")," in $s$ on a new line. The English vowels are ",Object(r.b)("em",{parentName:"li"},"a"),", ",Object(r.b)("em",{parentName:"li"},"e"),", ",Object(r.b)("em",{parentName:"li"},"i"),", ",Object(r.b)("em",{parentName:"li"},"o"),", and ",Object(r.b)("em",{parentName:"li"},"u"),", and each vowel must be printed in the same order as it appeared in $s$ ."),Object(r.b)("li",{parentName:"ol"},"Second, print each ",Object(r.b)("em",{parentName:"li"},"consonant")," (i.e., non-vowel) in $s$ on a new line in the same order as it appeared in $s$.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"Locked stub code in the editor reads string $s$ from stdin and passes it to the function."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"First, print each ",Object(r.b)("em",{parentName:"p"},"vowel")," in $s$ on a new line (in the same order as they appeared in $s$ ). Second, print each ",Object(r.b)("em",{parentName:"p"},"consonant")," (i.e., non-vowel) in $s$ on a new line (in the same order as they appeared in $s$)."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"javascriptloops\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"a\na\ni\no\no\nj\nv\ns\nc\nr\np\nt\nl\np\ns\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"Observe the following:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Each letter is printed on a new line."),Object(r.b)("li",{parentName:"ul"},"Then the vowels are printed in the same order as they appeared in $s$."),Object(r.b)("li",{parentName:"ul"},"Then the consonants are printed in the same order as they appeared in $s$.")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/*\n * Complete the vowelsAndConsonants function.\n * Print your output using 'console.log()'.\n */\nfunction vowelsAndConsonants(s) {\n    \n}\n")),Object(r.b)("h1",{id:"day-3-arrays"},"Day 3: Arrays"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we learn about ",Object(r.b)("em",{parentName:"p"},"Arrays"),". Check out the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the ",Object(r.b)("em",{parentName:"p"},"getSecondLargest")," function in the editor below. It has one parameter: an array, $nums$, of $n$ numbers. The function must find and return the second largest number in $nums$."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"Locked stub code in the editor reads the following input from stdin and passes it to the function:\nThe first line contains an integer, $n$, denoting the size of the $nums$ array.\nThe second line contains $n$ space-separated numbers describing the elements in $nums$ ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"$1 \\leq n \\leq 10$"),Object(r.b)("li",{parentName:"ul"},"$0 \\leq nums_i \\leq 100$, where is the number at index $i$."),Object(r.b)("li",{parentName:"ul"},"The numbers in $nums$ are not distinct.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"Return the value of the second largest number in the $nums$ array."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"5\n2 3 6 6 5\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"5\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"Given the array $nums = ","[2,3,6,6,5]","$, we see that the largest value in the array is $6$ and the second largest value is $5$. Thus, we return $5$ as our answer."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/**\n*   Return the second largest number in the array.\n*   @param {Number[]} nums - An array of numbers.\n*   @return {Number} The second largest number in the array.\n**/\nfunction getSecondLargest(nums) {\n    // Complete the function\n}\n")),Object(r.b)("h1",{id:"day-3-try-catch-and-finally"},"Day 3: Try, Catch, and Finally"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we learn about ",Object(r.b)("em",{parentName:"p"},"strings")," and ",Object(r.b)("em",{parentName:"p"},"exceptions"),". Check out the attached tutorials for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the ",Object(r.b)("em",{parentName:"p"},"reverseString")," function; it has one parameter, $s$. You must perform the following actions:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("em",{parentName:"li"},"Try")," to reverse string $s$ using the ",Object(r.b)("em",{parentName:"li"},"split"),", ",Object(r.b)("em",{parentName:"li"},"reverse"),", and ",Object(r.b)("em",{parentName:"li"},"join")," methods."),Object(r.b)("li",{parentName:"ol"},"If an exception is thrown, ",Object(r.b)("em",{parentName:"li"},"catch")," it and print the contents of the exception's $message$ on a new line."),Object(r.b)("li",{parentName:"ol"},"Print $s$ on a new line. If no exception was thrown, then this should be the reversed string; if an exception was thrown, this should be the original string.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"Locked stub code in the editor reads variable $s$ from stdin and passes it to the function."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"You must write two print statements using ",Object(r.b)("inlineCode",{parentName:"p"},"console.log()"),":"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Print the contents of a caught exception's $message$ on a new line. If no exception was thrown, this line should not be printed."),Object(r.b)("li",{parentName:"ol"},"Print on a new line. If no exception was thrown, then this should be the reversed string; if an exception was thrown, this should be the original string.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'"1234"\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"4321\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null," $s=\\ 1234$ is a string type, so it can be reversed without throwing an exception. Thus, we print the reversed value, ",Object(r.b)("inlineCode",{parentName:"p"},"4321"),", as our answer."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 1")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Number(1234)\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 1")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"s.split is not a function\n1234\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 1")),Object(r.b)("p",null," $s = Number(1234)$ is not a string type, so it can't be reversed using string functions. When we ",Object(r.b)("em",{parentName:"p"},"try")," to reverse it anyway, it throws an exception. We then ",Object(r.b)("em",{parentName:"p"},"catch")," the exception and print its $message$, which is ",Object(r.b)("inlineCode",{parentName:"p"},"s.split is not a function"),". Next, we ",Object(r.b)("em",{parentName:"p"},"finally")," print which, because it wasn't able to be reversed, is ",Object(r.b)("inlineCode",{parentName:"p"},"Number(1234)"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/*\n * Complete the reverseString function\n * Use console.log() to print to stdout.\n */\nfunction reverseString(s) {\n    \n}\n")),Object(r.b)("h1",{id:"day-3-throw"},"Day 3: Throw"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we practice using ",Object(r.b)("em",{parentName:"p"},"throw")," and ",Object(r.b)("em",{parentName:"p"},"catch")," statements to work with custom error messages."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the ",Object(r.b)("em",{parentName:"p"},"isPositive")," function below. It has one integer parameter, . If the value of is positive, it must return the string ",Object(r.b)("inlineCode",{parentName:"p"},"YES"),". Otherwise, it must ",Object(r.b)("em",{parentName:"p"},"throw")," an ",Object(r.b)("em",{parentName:"p"},"Error")," according to the following rules:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"If $a$ is $0$, ",Object(r.b)("em",{parentName:"li"},"throw")," an ",Object(r.b)("em",{parentName:"li"},"Error")," with $message =$ ",Object(r.b)("inlineCode",{parentName:"li"},"Zero Error"),"."),Object(r.b)("li",{parentName:"ul"},"If $a$ is negative, ",Object(r.b)("em",{parentName:"li"},"throw")," an ",Object(r.b)("em",{parentName:"li"},"Error")," with $message =$ ",Object(r.b)("inlineCode",{parentName:"li"},"Negative Error"),".")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"Locked stub code in the editor reads the following input from stdin and passes each value of $a$ to the function as an argument:\nThe first line is an integer, $n$ , denoting the number of times the function will be called with some $a$.\nEach line $i$ of the $n$ subsequent lines contains an integer denoting some $a$."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"$1 \\leq n \\leq 5$"),Object(r.b)("li",{parentName:"ul"},"$-100 \\leq a \\leq 100$")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"If the value of $a$ is positive, the function must return the string ",Object(r.b)("inlineCode",{parentName:"p"},"YES"),". Otherwise, it must ",Object(r.b)("em",{parentName:"p"},"throw")," an ",Object(r.b)("em",{parentName:"p"},"Error")," according to the following rules:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"If $a$ is $0$, ",Object(r.b)("em",{parentName:"li"},"throw")," an ",Object(r.b)("em",{parentName:"li"},"Error")," with $message =$ ",Object(r.b)("inlineCode",{parentName:"li"},"Zero Error"),"."),Object(r.b)("li",{parentName:"ul"},"If is negative, ",Object(r.b)("em",{parentName:"li"},"throw")," an ",Object(r.b)("em",{parentName:"li"},"Error")," with $message =$ ",Object(r.b)("inlineCode",{parentName:"li"},"Negative Error"),".")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"3\n1\n2\n3\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"YES\nYES\nYES\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"Each of the given values is positive, so we return ",Object(r.b)("inlineCode",{parentName:"p"},"YES")," each time. The value returned during each function call is printed on a new line by locked stub code in the editor."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 1")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"3\n2\n0\n6\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 1")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"YES\nZero Error\nYES\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 1")),Object(r.b)("p",null,"Locked stub code in the editor makes the following three calls to the ",Object(r.b)("em",{parentName:"p"},"isPositive")," function:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"isPositive(2)"),": This returns ",Object(r.b)("inlineCode",{parentName:"li"},"YES")," because is $2$ positive."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"isPositive(0)"),": Because $a=0$ , we throw an ",Object(r.b)("em",{parentName:"li"},"Error")," with $message =$",Object(r.b)("inlineCode",{parentName:"li"},"Zero Error"),". This is caught by the locked stub code and the value of its $message$ is printed."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"isPositive(6)"),": This returns ",Object(r.b)("inlineCode",{parentName:"li"},"YES")," because $6$ is positive.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 2")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"2\n-1\n20\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 2")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Negative Error\nYES\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 2")),Object(r.b)("p",null,"Locked stub code in the editor makes the following two calls to the ",Object(r.b)("em",{parentName:"p"},"isPositive")," function:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"isPositive(-1)"),": Because $a=-1$, we throw an ",Object(r.b)("em",{parentName:"li"},"Error")," with $message =$ ",Object(r.b)("inlineCode",{parentName:"li"},"Negative Error"),". This is caught by the locked stub code and the value of its $message$ is printed."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"isPositive(20)"),": This returns ",Object(r.b)("inlineCode",{parentName:"li"},"YES")," because $20$ is positive.")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/*\n * Complete the isPositive function.\n * If 'a' is positive, return \"YES\".\n * If 'a' is 0, throw an Error with the message \"Zero Error\"\n * If 'a' is negative, throw an Error with the message \"Negative Error\"\n */\nfunction isPositive(a) {\n    \n}\n")),Object(r.b)("h1",{id:"day-4-create-a-rectangle-object"},"Day 4: Create a Rectangle Object"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we practice creating objects. Check out the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the function in the editor. It has two parameters: and . It must return an object modeling a rectangle that has the following properties:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},": This value is equal to ."),Object(r.b)("li",{parentName:"ul"},": This value is equal to ."),Object(r.b)("li",{parentName:"ul"},": This value is equal to "),Object(r.b)("li",{parentName:"ul"},": This value is equal to ")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note:")," The names of the object's properties ",Object(r.b)("em",{parentName:"p"},"must")," be spelled correctly to pass this challenge."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"The first line contains an integer denoting .\nThe second line contains an integer denoting ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"})),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"Return a object that has the properties specified above. Locked code in the editor prints the returned object's , , , and to STDOUT."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"4\n5\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"4\n5\n18\n20\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"Given a of and a of , the ",Object(r.b)("em",{parentName:"p"},"Rectangle")," object's is and its is ."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/*\n * Complete the Rectangle function\n */\nfunction Rectangle(a, b) {\n    \n}\n")),Object(r.b)("h1",{id:"day-4-count-objects"},"Day 4: Count Objects"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we learn about iterating over objects. Check the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the function in the editor. It has one parameter: an array, , of objects. Each object in the array has two integer properties denoted by and . The function must return a count of all such objects in array that satisfy ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"The first line contains an integer denoting .\nEach of the subsequent lines contains two space-separated integers describing the values of and ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}),Object(r.b)("li",{parentName:"ul"})),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"Return a count of the total number of objects such that . Locked stub code in the editor prints the returned value to STDOUT."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"5\n1 1\n2 3\n3 3\n3 4\n4 5\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"2\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"There are objects in the array:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}),Object(r.b)("li",{parentName:"ul"}),Object(r.b)("li",{parentName:"ul"}),Object(r.b)("li",{parentName:"ul"}),Object(r.b)("li",{parentName:"ul"})),Object(r.b)("p",null,"Because we have two objects that satisfy (i.e., and ), we return as our answer."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/*\n * Return a count of the total number of objects 'o' satisfying o.x == o.y.\n * \n * Parameter(s):\n * objects: an array of objects with integer properties 'x' and 'y'\n */\nfunction getCount(objects) {\n    \n}\n")),Object(r.b)("h1",{id:"day-4-classes"},"Day 4: Classes"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we practice using JavaScript classes. Check the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Create a ",Object(r.b)("em",{parentName:"p"},"Polygon")," class that has the following properties:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"A ",Object(r.b)("em",{parentName:"li"},"constructor")," that takes an array of integer values describing the lengths of the polygon's sides."),Object(r.b)("li",{parentName:"ul"},"A ",Object(r.b)("em",{parentName:"li"},"perimeter()")," method that returns the polygon's perimeter.")),Object(r.b)("p",null,"Locked code in the editor tests the Polygon constructor and the ",Object(r.b)("em",{parentName:"p"},"perimeter")," method."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note:")," The ",Object(r.b)("em",{parentName:"p"},"perimeter")," method must be lowercase and spelled correctly."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"There is no input for this challenge."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"The ",Object(r.b)("em",{parentName:"p"},"perimeter")," method must return the polygon's perimeter using the side length array passed to the constructor."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation")),Object(r.b)("p",null,"Consider the following code:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"// Create a polygon with side lengths 3, 4, and 5\nlet triangle = new Polygon([3, 4, 5]);\n\n// Print the perimeter\nconsole.log(triangle.perimeter());\n")),Object(r.b)("p",null,"When executed with a properly implemented ",Object(r.b)("em",{parentName:"p"},"Polygon")," class, this code should print the result of ."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/*\n * Implement a Polygon class with the following properties:\n * 1. A constructor that takes an array of integer side lengths.\n * 2. A 'perimeter' method that returns the sum of the Polygon's side lengths.\n */\n")),Object(r.b)("h1",{id:"day-5-inheritance"},"Day 5: Inheritance"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we practice implementing ",Object(r.b)("em",{parentName:"p"},"inheritance")," and use JavaScript ",Object(r.b)("em",{parentName:"p"},"prototypes")," to add a new method to an existing prototype. Check out the attached ",Object(r.b)("em",{parentName:"p"},"Classes")," tutorial to refresh what we've learned about these topics."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"We provide the implementation for a ",Object(r.b)("em",{parentName:"p"},"Rectangle")," class in the editor. Perform the following tasks:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Add an ",Object(r.b)("em",{parentName:"p"},"area")," method to ",Object(r.b)("em",{parentName:"p"},"Rectangle"),"'s prototype.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Create a"))),Object(r.b)("p",null,"   Square"),Object(r.b)("p",null,"   class that satisfies the following:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It is a subclass of ",Object(r.b)("em",{parentName:"li"},"Rectangle"),"."),Object(r.b)("li",{parentName:"ul"},"It contains a constructor and no other methods."),Object(r.b)("li",{parentName:"ul"},"It can use the ",Object(r.b)("em",{parentName:"li"},"Rectangle")," class' ",Object(r.b)("em",{parentName:"li"},"area")," method to print the area of a ",Object(r.b)("em",{parentName:"li"},"Square")," object.")),Object(r.b)("p",null,"Locked code in the editor tests the class and method implementations and prints the ",Object(r.b)("em",{parentName:"p"},"area")," values to STDOUT."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/*\n *  Write code that adds an 'area' method to the Rectangle class' prototype\n */\n\n/*\n * Create a Square class that inherits from Rectangle and implement its class constructor\n */\n")),Object(r.b)("h1",{id:"day-5-template-literals"},"Day 5: Template Literals"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we practice using JavaScript Template Literals. Check the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"The code in the editor has a tagged template literal that passes the area and perimeter of a rectangle to a tag function named ",Object(r.b)("em",{parentName:"p"},"sides"),". Recall that the first argument of a tag function is an array of string literals from the template, and the subsequent values are the template's respective expression values."),Object(r.b)("p",null,"Complete the function in the editor so that it does the following:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Finds the initial values of")),Object(r.b)("p",null,"   and"),Object(r.b)("p",null,"   by plugging the"),Object(r.b)("p",null,"   area"),Object(r.b)("p",null,"   and"),Object(r.b)("p",null,"   perimeter"),Object(r.b)("p",null,"   values into the formula:"),Object(r.b)("p",null,"   where"),Object(r.b)("p",null,"   is the rectangle's area and"),Object(r.b)("p",null,"   is its perimeter."),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Creates an array consisting of and and sorts it in ascending order.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Returns the sorted array."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"The first line contains an integer denoting .\nThe second line contains an integer denoting ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"})),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"Return an array consisting of and , sorted in ascending order."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"10\n14\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"10\n14\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"The locked code in the editor passes the following arrays to the tag function:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The value of is ",Object(r.b)("inlineCode",{parentName:"li"},"[ 'The area is: ', '.\\nThe perimeter is: ', '.' ]"),"."),Object(r.b)("li",{parentName:"ul"},"The value of is ",Object(r.b)("inlineCode",{parentName:"li"},"[ 140, 48 ]"),", where the first value denotes the rectangle's ",Object(r.b)("em",{parentName:"li"},"area"),", , and the second value denotes its ",Object(r.b)("em",{parentName:"li"},"perimeter"),", .")),Object(r.b)("p",null,"When we plug those values into our formula, we get the following:"),Object(r.b)("p",null,"We then store these values in an array, ",Object(r.b)("inlineCode",{parentName:"p"},"[14, 10]"),", sort the array, and return the sorted array, ",Object(r.b)("inlineCode",{parentName:"p"},"[10, 14]"),", as our answer."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/*\n * Determine the original side lengths and return an array:\n * - The first element is the length of the shorter side\n * - The second element is the length of the longer side\n * \n * Parameter(s):\n * literals: The tagged template literal's array of strings.\n * expressions: The tagged template literal's array of expression values (i.e., [area, perimeter]).\n */\nfunction sides(literals, ...expressions) {\n    \n}\n")),Object(r.b)("h1",{id:"day-5-arrow-functions"},"Day 5: Arrow Functions"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we practice using ",Object(r.b)("em",{parentName:"p"},"arrow functions"),". Check the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the function in the editor. It has one parameter: an array, . It must iterate through the array performing one of the following actions on each element:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"If the element is even, multiply the element by ."),Object(r.b)("li",{parentName:"ul"},"If the element is odd, multiply the element by .")),Object(r.b)("p",null,"The function must then return the modified array."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"The first line contains an integer, , denoting the size of .\nThe second line contains space-separated integers describing the respective elements of ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}),Object(r.b)("li",{parentName:"ul"},", where is the element of .")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"Return the modified array where every even element is doubled and every odd element is tripled."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"5\n1 2 3 4 5\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"3 4 9 8 15\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"Given , we modify each element so that all even elements are multiplied by and all odd elements are multipled by . In other words, . We then return the modified array as our answer."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"/*\n * Modify and return the array so that all even elements are doubled and all odd elements are tripled.\n * \n * Parameter(s):\n * nums: An array of numbers.\n */\nfunction modifyArray(nums) {\n    \n}\n")),Object(r.b)("h1",{id:"day-6-bitwise-operators"},"Day 6: Bitwise Operators"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"Today, we're practicing ",Object(r.b)("em",{parentName:"p"},"bitwise operations"),". Check the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"We define to be a sequence of distinct sequential integers from to ; in other words, . We want to know the maximum bitwise AND value of any two integers, and (where ), in sequence that is also ",Object(r.b)("em",{parentName:"p"},"less than a given integer"),", ."),Object(r.b)("p",null,"Complete the function in the editor so that given and , it returns the maximum ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note:")," The symbol represents the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Bitwise_operation#AND"}),"bitwise AND")," operator."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"The first line contains an integer, , denoting the number of function calls.\nEach of the subsequent lines defines a dataset for a function call in the form of two space-separated integers describing the respective values of and ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}),Object(r.b)("li",{parentName:"ul"}),Object(r.b)("li",{parentName:"ul"})),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"Return the maximum possible value of for any in sequence ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"3\n5 2\n8 5\n2 2\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"1\n4\n0\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"We perform the following function calls:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"When and , we have the following possible and values in set :"),Object(r.b)("table",{parentName:"li"},Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}))))),Object(r.b)("p",{parentName:"li"},"The maximum of any that is also is , so we return .")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"When and , the maximum of any in set is (see table above), so we return .")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"When and , the maximum of any in set is (see table above), so we return ."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 1")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"2\n9 2\n8 3\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 1")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"1\n2\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 1")),Object(r.b)("p",null,"We perform the following function calls:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"When and , the maximum of any in set is (see table above), so we return ."),Object(r.b)("li",{parentName:"ol"},"When and , the maximum of any in set is (see table above), so we return .")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// resolve\n")),Object(r.b)("h1",{id:"day-6-javascript-dates"},"Day 6: JavaScript Dates"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we learn about JavaScript ",Object(r.b)("em",{parentName:"p"},"Dates"),". Check out the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Given a date string, , in the format ",Object(r.b)("inlineCode",{parentName:"p"},"MM/DD/YYYY"),", find and return the day name for that date. Each day name must be one of the following strings: ",Object(r.b)("inlineCode",{parentName:"p"},"Sunday"),", ",Object(r.b)("inlineCode",{parentName:"p"},"Monday"),", ",Object(r.b)("inlineCode",{parentName:"p"},"Tuesday"),", ",Object(r.b)("inlineCode",{parentName:"p"},"Wednesday"),", ",Object(r.b)("inlineCode",{parentName:"p"},"Thursday"),", ",Object(r.b)("inlineCode",{parentName:"p"},"Friday"),", or ",Object(r.b)("inlineCode",{parentName:"p"},"Saturday"),". For example, the day name for the date ",Object(r.b)("inlineCode",{parentName:"p"},"12/07/2016")," is ",Object(r.b)("inlineCode",{parentName:"p"},"Wednesday"),"."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Input Format")),Object(r.b)("p",null,"Locked stub code in the editor reads the following input from stdin:\nThe first line contains an integer, , denoting the number of dates to check.\nEach line of the subsequent lines contains a date in ",Object(r.b)("inlineCode",{parentName:"p"},"MM/DD/YYYY")," format; each date denotes some that is passed to the function."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It is guaranteed that the input only consists of valid dates.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"The function must return a string denoting the day of the week corresponding to the date denoted by ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"2\n10/11/2009\n11/10/2010\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Sunday\nWednesday\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"The function is called for the following dates:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"The date ",Object(r.b)("inlineCode",{parentName:"li"},"10/11/2009")," was a Sunday, so we return ",Object(r.b)("inlineCode",{parentName:"li"},"Sunday"),"."),Object(r.b)("li",{parentName:"ol"},"The date ",Object(r.b)("inlineCode",{parentName:"li"},"11/10/2010")," was a Wednesday, so we return ",Object(r.b)("inlineCode",{parentName:"li"},"Wednesday"),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'// The days of the week are: "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"\nfunction getDayName(dateString) {\n    let dayName;\n    // Write your code here\n    \n    return dayName;\n}\n')),Object(r.b)("h1",{id:"day-7-regular-expressions-i"},"Day 7: Regular Expressions I"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we use a ",Object(r.b)("em",{parentName:"p"},"Regular Expression")," to evaluate a string. Check out the attached tutorial for more details."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the function in the editor below by returning a ",Object(r.b)("em",{parentName:"p"},"RegExp")," object, , that matches any string that ",Object(r.b)("em",{parentName:"p"},"begins")," and ",Object(r.b)("em",{parentName:"p"},"ends")," with the same ",Object(r.b)("em",{parentName:"p"},"vowel"),". Recall that the English vowels are ",Object(r.b)("inlineCode",{parentName:"p"},"a"),", ",Object(r.b)("inlineCode",{parentName:"p"},"e"),", ",Object(r.b)("inlineCode",{parentName:"p"},"i"),", ",Object(r.b)("inlineCode",{parentName:"p"},"o"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"u"),"."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The length of string is ."),Object(r.b)("li",{parentName:"ul"},"String consists of lowercase letters only (i.e., ",Object(r.b)("inlineCode",{parentName:"li"},"[a-z]"),").")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"The function must return a ",Object(r.b)("em",{parentName:"p"},"RegExp")," object that matches any string beginning with and ending in the same vowel."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"bcd\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"false\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"This string starts with (and ends in) a consonant, so it cannot start and end with the same vowel."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 1")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"abcd\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 1")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"false\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 1")),Object(r.b)("p",null,"This string ends in a consonant, so it cannot start and end with the same vowel."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 2")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"abcda\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 2")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"true\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 2")),Object(r.b)("p",null,"This string starts and ends with the same vowel (",Object(r.b)("inlineCode",{parentName:"p"},"a"),")."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 3")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"abcdo\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 3")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"false\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 3")),Object(r.b)("p",null,"This string starts with the vowel ",Object(r.b)("inlineCode",{parentName:"p"},"a")," but ends in the vowel ",Object(r.b)("inlineCode",{parentName:"p"},"o"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"function regexVar() {\n    /*\n     * Declare a RegExp object variable named 're'\n     * It must match a string that starts and ends with the same vowel (i.e., {a, e, i, o, u})\n     */\n    \n    \n    /*\n     * Do not remove the return statement\n     */\n    return re;\n}\n")),Object(r.b)("h1",{id:"day-7-regular-expressions-ii"},"Day 7: Regular Expressions II"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the function in the editor below by returning a ",Object(r.b)("em",{parentName:"p"},"RegExp")," object, , that matches any string satisfying both of the following conditions:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"String ",Object(r.b)("em",{parentName:"li"},"starts with")," the prefix ",Object(r.b)("inlineCode",{parentName:"li"},"Mr."),", ",Object(r.b)("inlineCode",{parentName:"li"},"Mrs."),", ",Object(r.b)("inlineCode",{parentName:"li"},"Ms."),", ",Object(r.b)("inlineCode",{parentName:"li"},"Dr."),", or ",Object(r.b)("inlineCode",{parentName:"li"},"Er.")),Object(r.b)("li",{parentName:"ul"},"The remainder of string (i.e., the rest of the string after the prefix) consists of one or more upper and/or lowercase English alphabetic letters (i.e., ",Object(r.b)("inlineCode",{parentName:"li"},"[a-z]")," and ",Object(r.b)("inlineCode",{parentName:"li"},"[A-Z]"),").")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The length of string is .")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"The function must return a ",Object(r.b)("em",{parentName:"p"},"RegExp")," object that matches any string satisfying both of the given conditions."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Mr.X\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"true\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"This string starts with ",Object(r.b)("inlineCode",{parentName:"p"},"Mr."),", followed by an English alphabetic letter (",Object(r.b)("inlineCode",{parentName:"p"},"X"),")."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 1")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Mrs.Y\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 1")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"true\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 1")),Object(r.b)("p",null,"This string starts with ",Object(r.b)("inlineCode",{parentName:"p"},"Mrs."),", followed by an English alphabetic letter (",Object(r.b)("inlineCode",{parentName:"p"},"Y"),")."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 2")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Dr#Joseph\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 2")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"false\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 2")),Object(r.b)("p",null,"This string starts with ",Object(r.b)("inlineCode",{parentName:"p"},"Dr#")," instead of ",Object(r.b)("inlineCode",{parentName:"p"},"Dr."),", so it's invalid."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 3")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Er .Abc\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 3")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"false\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 3")),Object(r.b)("p",null,"This string starts with ",Object(r.b)("inlineCode",{parentName:"p"},"Er")," but there is a space before the period (",Object(r.b)("inlineCode",{parentName:"p"},"."),"), making the string invalid."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"function regexVar() {\n    /*\n     * Declare a RegExp object variable named 're'\n     * It must match a string that starts with 'Mr.', 'Mrs.', 'Ms.', 'Dr.', or 'Er.', \n     * followed by one or more letters.\n     */\n    \n    \n    /*\n     * Do not remove the return statement\n     */\n    return re;\n}\n")),Object(r.b)("h1",{id:"day-7-regular-expressions-iii"},"Day 7: Regular Expressions III"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the function in the editor below by returning a ",Object(r.b)("em",{parentName:"p"},"RegExp")," object, , that matches ",Object(r.b)("em",{parentName:"p"},"every integer")," in some string ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The length of string is ."),Object(r.b)("li",{parentName:"ul"},"It's guaranteed that string contains ",Object(r.b)("em",{parentName:"li"},"at least")," one integer.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Output Format")),Object(r.b)("p",null,"The function must return a ",Object(r.b)("em",{parentName:"p"},"RegExp")," object that matches ",Object(r.b)("em",{parentName:"p"},"every integer")," in some string ."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"102, 1948948 and 1.3 and 4.5\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 0")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"102\n1948948\n1\n3\n4\n5\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 0")),Object(r.b)("p",null,"When we call ",Object(r.b)("em",{parentName:"p"},"match")," on string and pass the correct ",Object(r.b)("em",{parentName:"p"},"RegExp")," as our argument, it returns the following array of results: ",Object(r.b)("inlineCode",{parentName:"p"},"[ '102', '1948948', '1', '3', '4', '5' ]"),"."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Input 1")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"1 2 3\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Sample Output 1")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"1\n2\n3\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation 1")),Object(r.b)("p",null,"When we call ",Object(r.b)("em",{parentName:"p"},"match")," on string and pass the correct ",Object(r.b)("em",{parentName:"p"},"RegExp")," as our argument, it returns the following array of results: ",Object(r.b)("inlineCode",{parentName:"p"},"[ '1', '2', '3' ]"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"function regexVar() {\n    /*\n     * Declare a RegExp object variable named 're'\n     * It must match ALL occurrences of numbers in a string.\n     */\n    \n    \n    /*\n     * Do not remove the return statement\n     */\n    return re;\n}\n")),Object(r.b)("h1",{id:"day-8-create-a-button"},"Day 8: Create a Button"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we practice creating buttons in JavaScript. Check out the attached tutorial for learning materials."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Complete the code in the editor so that it creates a clickable button satisfying the following properties:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The button's ",Object(r.b)("inlineCode",{parentName:"li"},"id")," is ",Object(r.b)("inlineCode",{parentName:"li"},"btn"),"."),Object(r.b)("li",{parentName:"ul"},"The button's initial text label is . After each click, the button must increment by . Recall that the button's text label is the JS object's ",Object(r.b)("inlineCode",{parentName:"li"},"innerHTML")," property."),Object(r.b)("li",{parentName:"ul"},"The button has the following style properties:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"A ",Object(r.b)("inlineCode",{parentName:"li"},"width")," of ",Object(r.b)("inlineCode",{parentName:"li"},"96px"),"."),Object(r.b)("li",{parentName:"ul"},"A ",Object(r.b)("inlineCode",{parentName:"li"},"height")," of ",Object(r.b)("inlineCode",{parentName:"li"},"48px"),"."),Object(r.b)("li",{parentName:"ul"},"The ",Object(r.b)("inlineCode",{parentName:"li"},"font-size")," attribute is ",Object(r.b)("inlineCode",{parentName:"li"},"24px"),".")))),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},".js")," and ",Object(r.b)("inlineCode",{parentName:"p"},".css")," files are in different directories, so use the ",Object(r.b)("em",{parentName:"p"},"link")," tag to provide the CSS file path and the ",Object(r.b)("em",{parentName:"p"},"script")," tag to provide the JS file path:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'<!DOCTYPE html>\n<html>\n    <head>\n        <link rel="stylesheet" href="css/button.css" type="text/css">\n    </head>\n    \n    <body>\n        <script src="js/button.js" type="text/javascript"><\/script>\n    </body>\n</html>\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Submissions")),Object(r.b)("p",null,"This is a new style of challenge involving Front-End rendering. It may take up to seconds to see the result of your code, so ",Object(r.b)("em",{parentName:"p"},"please be patient after clicking Submit"),". The ",Object(r.b)("em",{parentName:"p"},"Submissions")," page contains screenshots to help you gauge how well you did."),Object(r.b)("p",null,"Ask questions in the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.hackerrank.com/forum"}),"Discussions forum")," and submit any bug reports to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"mailto:support@hackerrank.com."}),"support@hackerrank.com.")," Enjoy!"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation")),Object(r.b)("p",null,"Initially, the button looks like this:"),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/17983/1456614015-11045006f4-btn_initial.png",alt:"initial"}))),Object(r.b)("p",null,"After the first clicks, it looks like this:"),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/17983/1456614041-e93e72ebf9-btn_4_clicks.png",alt:"four clicks"}))),Object(r.b)("p",null,"After more clicks, it looks like this:"),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/17983/1456614069-ee3675b288-btn_5_clicks.png",alt:"nine clicks"}))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// js\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),"/*css*/\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"\x3c!-- html --\x3e\n")),Object(r.b)("h1",{id:"day-8-buttons-container"},"Day 8: Buttons Container"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we lay out buttons inside a ",Object(r.b)("em",{parentName:"p"},"div")," and modify their labels after each click event on one of the buttons. Check out the attached tutorial for learning materials."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task"),"\nWe want to create nine buttons enclosed in a ",Object(r.b)("em",{parentName:"p"},"div"),", laid out so they form a grid. Each button has a distinct label from to , and the labels on the outer buttons must rotate in the ",Object(r.b)("em",{parentName:"p"},"clockwise")," direction each time we click the middle button."),Object(r.b)("p",null,"Complete the code in the editor so that it satisfies the following criteria:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("em",{parentName:"p"},"Initial State.")," The initial layout looks like this:\n",Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/0/1456631615-634977c808-ScreenShot2016-02-28at9.22.14AM.png",alt:"layout"})))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("em",{parentName:"p"},"Element IDs.")," Each element in the document must have an ",Object(r.b)("inlineCode",{parentName:"p"},"id"),", specified below:"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"The button container ",Object(r.b)("em",{parentName:"li"},"div"),"'s ",Object(r.b)("inlineCode",{parentName:"li"},"id")," must be ",Object(r.b)("inlineCode",{parentName:"li"},"btns"),"."),Object(r.b)("li",{parentName:"ul"},"The initial ",Object(r.b)("inlineCode",{parentName:"li"},"innerHTML")," labels must have the following button ",Object(r.b)("inlineCode",{parentName:"li"},"id"),"s:")),Object(r.b)("table",{parentName:"li"},Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"th"},"innerHTML")),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"th"},"id")))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btn1"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"2")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btn2"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"3")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btn3"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"4")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btn4"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"5")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btn5"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"6")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btn6"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"7")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btn7"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"8")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btn8"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"9")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btn9")))))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Styling."))),Object(r.b)("p",null,"  The document's elements must have the following styles:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The ",Object(r.b)("inlineCode",{parentName:"p"},"width")," of ",Object(r.b)("inlineCode",{parentName:"p"},"btns")," is , relative to the document body's width.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Each button (i.e.,"))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"```\nbtn1\n```\n\n \n\nthrough\n\n \n\n```\nbtn9\n```\n\n) satisfies the following:\n\n- The `width` is , relative to its container width.\n- The `height` is `48px`.\n- The `font-size` is `24px`.\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("em",{parentName:"li"},"Behavior.")," Each time ",Object(r.b)("inlineCode",{parentName:"li"},"btn5")," is clicked, the ",Object(r.b)("inlineCode",{parentName:"li"},"innerHTML")," text on the grid's outer buttons (i.e., ",Object(r.b)("inlineCode",{parentName:"li"},"bt1"),", ",Object(r.b)("inlineCode",{parentName:"li"},"btn2"),", ",Object(r.b)("inlineCode",{parentName:"li"},"btn3"),", ",Object(r.b)("inlineCode",{parentName:"li"},"btn4"),", ",Object(r.b)("inlineCode",{parentName:"li"},"btn6"),", ",Object(r.b)("inlineCode",{parentName:"li"},"btn7"),", ",Object(r.b)("inlineCode",{parentName:"li"},"btn8"),", ",Object(r.b)("inlineCode",{parentName:"li"},"btn9"),") must rotate in the ",Object(r.b)("em",{parentName:"li"},"clockwise")," direction. ",Object(r.b)("em",{parentName:"li"},"Do not")," update the button ",Object(r.b)("inlineCode",{parentName:"li"},"id"),"'s.")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},".js")," and ",Object(r.b)("inlineCode",{parentName:"p"},".css")," files are in different directories, so use the ",Object(r.b)("em",{parentName:"p"},"link")," tag to provide the CSS file path and the ",Object(r.b)("em",{parentName:"p"},"script")," tag to provide the JS file path:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'<!DOCTYPE html>\n<html>\n    <head>\n        <link rel="stylesheet" href="css/buttonsGrid.css" type="text/css">\n    </head>\n    \n    <body>\n        <script src="js/buttonsGrid.js" type="text/javascript"><\/script>\n    </body>\n</html>\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation")),Object(r.b)("p",null,"Initially, the buttons look like this:"),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/0/1456632368-64062011d3-ScreenShot2016-02-28at9.22.14AM.png",alt:"initial"}))),Object(r.b)("p",null,"After clicking ",Object(r.b)("inlineCode",{parentName:"p"},"btn5")," time, they look like this:",Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/0/1456632450-3cda1c5938-ScreenShot2016-02-28at9.37.00AM.png",alt:"click1"}))),Object(r.b)("p",null,"After clicking ",Object(r.b)("inlineCode",{parentName:"p"},"btn5")," more time (for a total of clicks), they look like this:",Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/0/1456632516-9a0d9cef8a-ScreenShot2016-02-28at9.38.04AM.png",alt:"click2"}))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// js\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),"/*css*/\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"\x3c!-- html --\x3e\n")),Object(r.b)("h1",{id:"day-9-binary-calculator"},"Day 9: Binary Calculator"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Objective")),Object(r.b)("p",null,"In this challenge, we implement a calculator that uses binary numbers. Check out the attached tutorial for learning materials."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Task")),Object(r.b)("p",null,"Implement a simple calculator that performs the following operations on ",Object(r.b)("em",{parentName:"p"},"binary numbers"),": addition, subtraction, multiplication, and division. Note that division operation must be ",Object(r.b)("em",{parentName:"p"},"integer division")," only; for example, , , and ."),Object(r.b)("p",null,"The calculator's initial state must look like this:"),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/0/1456642859-ad1191f53b-ScreenShot2016-02-28at12.29.21PM.png",alt:"image"}))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("em",{parentName:"p"},"Element IDs. Each element in the document must have an ",Object(r.b)("inlineCode",{parentName:"em"},"id"),", specified below:")),Object(r.b)("table",{parentName:"li"},Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"th"},"innerHTML")),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"th"},"id")),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description/Behavior"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"res")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Contains the result of button presses.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btns")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A button container that displays all eight calculator buttons.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"0")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btn0")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A button expressing binary digit .")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btn1")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A button expressing binary digit .")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"C")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btnClr")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A button to clear the contents of .")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"=")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btnEql")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A button to evaluate the contents of the expression in .")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"+")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btnSum")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A button for the addition operation.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"-")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btnSub")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A button for the subtraction operation.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"*")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btnMul")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A button for the multiplication operation.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"/")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"btnDiv")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A button for the integer division operation."))))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("em",{parentName:"p"},"Styling.")," The document's elements must have the following styles:"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"body")," has a ",Object(r.b)("inlineCode",{parentName:"li"},"width")," of ",Object(r.b)("inlineCode",{parentName:"li"},"33%"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"res")," has a ",Object(r.b)("inlineCode",{parentName:"li"},"background-color")," of ",Object(r.b)("inlineCode",{parentName:"li"},"lightgray"),", a ",Object(r.b)("inlineCode",{parentName:"li"},"border")," that is ",Object(r.b)("inlineCode",{parentName:"li"},"solid"),", a ",Object(r.b)("inlineCode",{parentName:"li"},"height")," of ",Object(r.b)("inlineCode",{parentName:"li"},"48px"),", and a ",Object(r.b)("inlineCode",{parentName:"li"},"font-size")," of ",Object(r.b)("inlineCode",{parentName:"li"},"20px"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"btn0")," and ",Object(r.b)("inlineCode",{parentName:"li"},"btn1")," have a ",Object(r.b)("inlineCode",{parentName:"li"},"background-color")," of ",Object(r.b)("inlineCode",{parentName:"li"},"lightgreen")," and a ",Object(r.b)("inlineCode",{parentName:"li"},"color")," of ",Object(r.b)("inlineCode",{parentName:"li"},"brown"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"btnClr")," and ",Object(r.b)("inlineCode",{parentName:"li"},"btnEql")," have a ",Object(r.b)("inlineCode",{parentName:"li"},"background-color")," of ",Object(r.b)("inlineCode",{parentName:"li"},"darkgreen")," and a ",Object(r.b)("inlineCode",{parentName:"li"},"color")," of ",Object(r.b)("inlineCode",{parentName:"li"},"white"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"btnSum"),", ",Object(r.b)("inlineCode",{parentName:"li"},"btnSub"),", ",Object(r.b)("inlineCode",{parentName:"li"},"btnMul"),", and ",Object(r.b)("inlineCode",{parentName:"li"},"btnDiv")," have a ",Object(r.b)("inlineCode",{parentName:"li"},"background-color")," of ",Object(r.b)("inlineCode",{parentName:"li"},"black"),", a ",Object(r.b)("inlineCode",{parentName:"li"},"color")," of ",Object(r.b)("inlineCode",{parentName:"li"},"red"),"."),Object(r.b)("li",{parentName:"ul"},"All the buttons in ",Object(r.b)("inlineCode",{parentName:"li"},"btns")," have a ",Object(r.b)("inlineCode",{parentName:"li"},"width")," of ",Object(r.b)("inlineCode",{parentName:"li"},"25%"),", a ",Object(r.b)("inlineCode",{parentName:"li"},"height")," of ",Object(r.b)("inlineCode",{parentName:"li"},"36px"),", a ",Object(r.b)("inlineCode",{parentName:"li"},"font-size")," of ",Object(r.b)("inlineCode",{parentName:"li"},"18px"),", ",Object(r.b)("inlineCode",{parentName:"li"},"margin")," of ",Object(r.b)("inlineCode",{parentName:"li"},"0px"),", and ",Object(r.b)("inlineCode",{parentName:"li"},"float")," value ",Object(r.b)("inlineCode",{parentName:"li"},"left"),".")))),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},".js")," and ",Object(r.b)("inlineCode",{parentName:"p"},".css")," files are in different directories, so use the ",Object(r.b)("em",{parentName:"p"},"link")," tag to provide the CSS file path and the ",Object(r.b)("em",{parentName:"p"},"script")," tag to provide the JS file path:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<!DOCTYPE html>\n<html>\n    <head>\n        <link rel="stylesheet" href="css/binaryCalculator.css" type="text/css">\n    </head>\n    \n    <body>\n        <script src="js/binaryCalculator.js" type="text/javascript"><\/script>\n    </body>\n</html>\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Constraints")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"All expressions in the test dataset are entered in the form , where is the first binary number, is the second binary number, and is in the set ."),Object(r.b)("li",{parentName:"ul"},"Both operands will always be positive integers when converted from base- to base-."),Object(r.b)("li",{parentName:"ul"},"All expressions will be valid.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Explanation")),Object(r.b)("p",null,"Consider the following sequence of button clicks:"),Object(r.b)("p",null,"Before pressing the button, the result ",Object(r.b)("em",{parentName:"p"},"div")," looks like this:"),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/18103/1456666017-1857ab934b-ScreenShot2016-02-28at6.55.52PM.png",alt:"27+8"}))),Object(r.b)("p",null,"After pressing the button to evaluate our expression, the result ",Object(r.b)("em",{parentName:"p"},"div")," looks like this:"),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/18103/1456666141-da2d0c1331-ScreenShot2016-02-28at6.58.38PM.png",alt:"27+8eval"}))),Object(r.b)("p",null,"Notice that , , and , so our calculator evaluated the expression correctly."),Object(r.b)("p",null,"Now, let's consider our next sequence of button clicks as:"),Object(r.b)("p",null,"Before pressing the button, the result ",Object(r.b)("em",{parentName:"p"},"div")," looks like this:"),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/18103/1456666566-39a02c93ac-ScreenShot2016-02-28at7.04.23PM.png",alt:"141x7"}))),Object(r.b)("p",null,"After pressing the button to evaluate our expression, the result ",Object(r.b)("em",{parentName:"p"},"div")," looks like this:"),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/18103/1456666602-bb107fb013-ScreenShot2016-02-28at7.05.26PM.png",alt:"141x7eval"}))),Object(r.b)("p",null,"Consider the next sequence of button clicks as:"),Object(r.b)("p",null,"The result ",Object(r.b)("em",{parentName:"p"},"div")," looks like this:"),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://s3.amazonaws.com/hr-challenge-images/18103/1456667223-af168e6fc7-ScreenShot2016-02-28at7.16.38PM.png",alt:"clear3"}))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// js\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),"/*css*/\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"\x3c!-- html --\x3e\n")))}o.isMDXComponent=!0},133:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return j}));var a=n(0),b=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,b=function(e,t){if(null==e)return{};var n,a,b={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(b[n]=e[n]);return b}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(b[n]=e[n])}return b}var p=b.a.createContext({}),o=function(e){var t=b.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=o(e.components);return b.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},O=b.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=o(n),O=a,j=s["".concat(l,".").concat(O)]||s[O]||m[O]||r;return n?b.a.createElement(j,c(c({ref:t},p),{},{components:n})):b.a.createElement(j,c({ref:t},p))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=O;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var p=2;p<r;p++)l[p]=n[p];return b.a.createElement.apply(null,l)}return b.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"}}]);